// <auto-generated />
using System;
using LedsAPI.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LedsAPI.Infra.Migrations
{
    [DbContext(typeof(LedsDbContext))]
    [Migration("20250708203202_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("CandidatoProfissao", b =>
                {
                    b.Property<string>("CandidatoCPF")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProfissoesId")
                        .HasColumnType("TEXT");

                    b.HasKey("CandidatoCPF", "ProfissoesId");

                    b.HasIndex("ProfissoesId");

                    b.ToTable("CandidatoProfissao", (string)null);
                });

            modelBuilder.Entity("ConcursoEmpregoVaga", b =>
                {
                    b.Property<long>("ConcursosCdConcurso")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VagasId")
                        .HasColumnType("TEXT");

                    b.HasKey("ConcursosCdConcurso", "VagasId");

                    b.HasIndex("VagasId");

                    b.ToTable("ConcursoEmpregoVaga");
                });

            modelBuilder.Entity("EmpregoVagaProfissao", b =>
                {
                    b.Property<Guid>("EmpregoVagaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProfissoesNecessariasId")
                        .HasColumnType("TEXT");

                    b.HasKey("EmpregoVagaId", "ProfissoesNecessariasId");

                    b.HasIndex("ProfissoesNecessariasId");

                    b.ToTable("VagaProfissao", (string)null);
                });

            modelBuilder.Entity("LedsAPI.Domain.Entities.Candidato", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CPF");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("LedsAPI.Domain.Entities.Concurso", b =>
                {
                    b.Property<long>("CdConcurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Edital")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Orgao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CdConcurso");

                    b.ToTable("Concursos");
                });

            modelBuilder.Entity("LedsAPI.Domain.Entities.EmpregoVaga", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeVag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("LedsAPI.Domain.Entities.Profissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeProf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NomeProf")
                        .IsUnique();

                    b.ToTable("Profissoes");
                });

            modelBuilder.Entity("CandidatoProfissao", b =>
                {
                    b.HasOne("LedsAPI.Domain.Entities.Candidato", null)
                        .WithMany()
                        .HasForeignKey("CandidatoCPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LedsAPI.Domain.Entities.Profissao", null)
                        .WithMany()
                        .HasForeignKey("ProfissoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConcursoEmpregoVaga", b =>
                {
                    b.HasOne("LedsAPI.Domain.Entities.Concurso", null)
                        .WithMany()
                        .HasForeignKey("ConcursosCdConcurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LedsAPI.Domain.Entities.EmpregoVaga", null)
                        .WithMany()
                        .HasForeignKey("VagasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmpregoVagaProfissao", b =>
                {
                    b.HasOne("LedsAPI.Domain.Entities.EmpregoVaga", null)
                        .WithMany()
                        .HasForeignKey("EmpregoVagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LedsAPI.Domain.Entities.Profissao", null)
                        .WithMany()
                        .HasForeignKey("ProfissoesNecessariasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
